Raul Plesa i Oriol Martí Jariod

EC Sessió 2: Traducció de programes

Activitat 2.A
Excercici 2.1

li $t0, 0x01
sllu $s0, $t0, $s0
subiu $s0, $s0, 1
xor $s1, $s0, $s1

Excercici 2.2

	.data
result:		.space 4
num:		.byte 0x37
	.globl main
	.text
	
main:
la $t0, num
	lb $t0, 0($t0)
		
	li $t1, 0x61
	slt $t2, $t0, $t1
	bne $t2, $zero, or
		
	li $t1, 0x7A
	slt $t2, $t0, $t1
	bne $t2, $zero, if
		
or:	li $t1, 0x41
	slt $t2, $t0, $t1
	bne $t2, $zero, else
		
	li $t1, 0x5A
	slt $t2, $t0, $t1
	bne $t2, $zero, else
	
if:	la $t1, result
	sb $t0, 0($t1)
	b end
		
else:	li $t1, 0x30
	slt $t2, $t0, $t1
	bne $t2, $zero, else2
		
	li $t1, 0x39
	slt $t2, $t0, $t1
	bne $t2, $zero, else2
	
	li $t7,0x30
	subu $t0, $t0, $t7
	la $t1, result
	sb $t0, 0($t1)
	b end
	
else2:	li $t0, 0xFF
	la $t1, result
	sb $t0, 0($t1)
		
end:
	jr $ra

Activitat 2.C
Excercici 2.3

moda:
	addiu $sp, $sp, -60
	sw $s0, 40($sp)
	sw $s1, 44($sp)
	sw $s2, 48($sp)
	sw $s3, 52($sp)
	sw $ra, 56($sp)

	li $t0, 0
	li $t1, 10
	move $t2, $sp
for:	beq $t0, $t1, fi
	sw $zero, 0($t2)
	addiu $t2, $t2, 4
	addiu $t0, $t0, 1
	b for

fi:	move $s0, $a0
	move $s1, $a1
		
	li $s2, 0

	li $s3, '0'
	

for2:	beq $s2, $s1, fi2
	
	move $a0, $sp
	addu $a1, $s0, $s2
	lb $a1, 0($a1)
	addiu $a1, $a1, -48
	
	addiu $a2, $s3, -48
	
	jal	update
	
	addiu $s3, $v0, '0'
	addiu $s2, $s2, 1
	b for2

fi2:	move $v0, $s3

	lw $s0, 40($sp)
	lw $s1, 44($sp)
	lw $s2, 48($sp)
	lw $s3, 52($sp)
	lw $ra, 56($sp)
	addiu	$sp, $sp, 60
	jr 	$ra


update:
	addiu	$sp, $sp, -16
	sw $s0, 0($sp)
	sw $s1, 4($sp)
	sw $s2, 8($sp)
	sw $ra, 12($sp)
	
	move $s0, $a0
	move $s1, $a1
	move $s2, $a2

	jal nofares
	
	sll $t0, $s1, 2
	addu $t0, $s0, $t0
	lw $t1, 0($t0)
	addiu $t1, $t1, 1
	sw $t1, 0($t0)
	
	sll $t2, $s2, 2
	addu $t2, $s0, $t2
	lw $t2, 0($t2)
	
	ble $t1, $t2, else
	move $v0, $s1
	b fi3
	
else:	move $v0, $s2

fi3:	lw $s0, 0($sp)
	lw $s1, 4($sp)
	lw $s2, 8($sp)
	lw $ra, 12($sp)
	addiu	$sp, $sp, 16
	jr $ra


Actividad 2.D
Excercici 2.4

- segona instrucció del while: lb $t0, 0($t0)
no necessitem aquesta adreça de la memòria

- cinquena instrucció del while: move $a1, $s1
ha d'agafar $s0 que és on està *pfrasein

- setena instrucció del while: sb $v0, 0($s0)
s'ha de guardar a $s1 que és on està *pfraseout

